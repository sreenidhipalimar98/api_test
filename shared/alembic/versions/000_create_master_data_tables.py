"""create master data tables

Revision ID: 000
Revises: 
Create Date: 2025-07-14 23:19:38.581339

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect
import os


# revision identifiers, used by Alembic.
revision: str = '000'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('component',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('capacity_in_liters', sa.NUMERIC(precision=30, scale=20), nullable=True),
    sa.Column('material', sa.String(length=64), nullable=True),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=64), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fitting',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('symbol', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=64), nullable=True),
    sa.Column('pipe_size_in_metric_value', sa.NUMERIC(precision=30, scale=20), nullable=True),
    sa.Column('pipi_size_in_metric_unit', sa.String(length=2), nullable=True),
    sa.Column('pipe_size_in_imperial_value', sa.NUMERIC(precision=30, scale=20), nullable=True),
    sa.Column('pipe_size_in_imperial_unit', sa.String(length=4), nullable=True),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('k_factor', sa.NUMERIC(precision=10, scale=5), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=64), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gas',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('formula', sa.String(length=64), nullable=True),
    sa.Column('temperature_in_k', sa.NUMERIC(precision=10, scale=5), nullable=True),
    sa.Column('pressure_in_bar_g', sa.NUMERIC(precision=10, scale=5), nullable=True),
    sa.Column('density_in_kg_or_meter_cube', sa.NUMERIC(precision=10, scale=5), nullable=True),
    sa.Column('viscosity_centipoise', sa.NUMERIC(precision=20, scale=10), nullable=True),
    sa.Column('specific_heat_ratio', sa.NUMERIC(precision=20, scale=10), nullable=True),
    sa.Column('state', sa.String(length=3), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=64), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('liquid',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('formula', sa.String(length=64), nullable=True),
    sa.Column('temperature_in_k', sa.NUMERIC(precision=10, scale=5), nullable=True),
    sa.Column('pressure_in_bar_g', sa.NUMERIC(precision=10, scale=5), nullable=True),
    sa.Column('density_in_kg_or_meter_cube', sa.NUMERIC(precision=20, scale=10), nullable=True),
    sa.Column('viscosity_centipoise', sa.NUMERIC(precision=20, scale=10), nullable=True),
    sa.Column('vapour_pressure_in_kpa_absolute', sa.NUMERIC(precision=20, scale=10), nullable=True),
    sa.Column('state', sa.String(length=6), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=64), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )  
    op.create_table('pipe',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('material', sa.String(length=64), nullable=True),
    sa.Column('schedule_or_class', sa.String(length=64), nullable=True),
    sa.Column('internal_roughness_in_inch', sa.NUMERIC(precision=20, scale=10), nullable=True),
    sa.Column('size', sa.NUMERIC(precision=10), nullable=True),
    sa.Column('nominal_size_in_imperial_value', sa.NUMERIC(precision=30, scale=20), nullable=True),
    sa.Column('nominal_size_in_imperial_unit', sa.String(length=4), nullable=True),
    sa.Column('nominal_size_in_metric_value', sa.NUMERIC(precision=30, scale=20), nullable=True),
    sa.Column('nominal_size_in_metric_unit', sa.String(length=2), nullable=True),
    sa.Column('wall_thickness_in_inch', sa.NUMERIC(precision=20, scale=10), nullable=True),
    sa.Column('outside_diameter_in_inch', sa.NUMERIC(precision=20, scale=10), nullable=True),
    sa.Column('weight_in_lb_or_ft', sa.NUMERIC(precision=20, scale=10), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=64), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    ) 
    bind = op.get_bind()
    inspector = inspect(bind)
    existing_tables = inspector.get_table_names()
    db_name = bind.engine.url.database
    expected_db = os.getenv('dev_dbname') 
    
    if db_name == expected_db:
        existing_tables = inspector.get_table_names()
        if 'tenant' not in existing_tables:
            op.create_table(
                'tenant',
                sa.Column('id', sa.UUID(), nullable=False),
                sa.Column('tenant_id', sa.String(length=128), nullable=False),
                sa.Column('company_name', sa.String(length=128), nullable=True),
                sa.Column('logo_url', sa.String(length=256), nullable=True),
                sa.Column('created_at', sa.DateTime(), nullable=True),
                sa.Column('created_by', sa.UUID(), nullable=True),
                sa.Column('modified_at', sa.DateTime(), nullable=True),
                sa.Column('modified_by', sa.UUID(), nullable=True),
                sa.PrimaryKeyConstraint('id'),
                sa.UniqueConstraint('tenant_id')
            )    
     
    op.create_table('unit',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('symbol', sa.String(length=64), nullable=True),
    sa.Column('measurement_type', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=64), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('unit')
    op.drop_table('pipe') 
    op.drop_table('liquid')
    op.drop_table('gas')
    op.drop_table('fitting')
    op.drop_table('component')
    # ### end Alembic commands ###
